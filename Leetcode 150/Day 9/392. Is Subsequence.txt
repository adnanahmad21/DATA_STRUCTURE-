Given two strings s and t, return true if s is a subsequence of t, or false otherwise.

A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).

 

Example 1:

Input: s = "abc", t = "ahbgdc"
Output: true
Example 2:

Input: s = "axc", t = "ahbgdc"
Output: false
 

Constraints:

0 <= s.length <= 100
0 <= t.length <= 104
s and t consist only of lowercase English letters.


solution::

class Solution {
    public boolean isSubsequence(String s, String t){
       if(s.length()==0 && t.length()==0) return true;
       if(s.length()==0 ) return true;
       if(t.length()==0 ) return false;
       
         int i=0;
         int j=0;
       while(i<t.length())
       {
          char ch=s.charAt(j);
          if(t.charAt(i)==ch) {
            j++;
          }
           if(j==s.length()) return true;
          i++;
       }
       if(j==s.length()) return true;
       return false;
    }
}