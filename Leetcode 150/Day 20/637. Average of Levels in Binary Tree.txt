Given the root of a binary tree, return the average value of the nodes on each level in the form of an array. Answers within 10-5 of the actual answer will be accepted.
 

Example 1:


Input: root = [3,9,20,null,null,15,7]
Output: [3.00000,14.50000,11.00000]
Explanation: The average value of nodes on level 0 is 3, on level 1 is 14.5, and on level 2 is 11.
Hence return [3, 14.5, 11].
Example 2:


Input: root = [3,9,20,15,7]
Output: [3.00000,14.50000,11.00000]
 

Constraints:

The number of nodes in the tree is in the range [1, 104].
-231 <= Node.val <= 231 - 1




solution:::


class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> ans=new ArrayList<>();
        Queue<TreeNode> q=new ArrayDeque<>();
        q.add(root);
        while(q.size()>0)
        {
            int n=q.size();
         long sum=0;
            int count=n;
            while(n-->0)
            {
             TreeNode temp=q.poll();
             sum+=temp.val;
            if(temp.left!=null) q.add(temp.left);
            if(temp.right!=null) q.add(temp.right);
            }
            double d=(double)sum/(double)count;
            ans.add(d);
        }
        return ans;
    }
}